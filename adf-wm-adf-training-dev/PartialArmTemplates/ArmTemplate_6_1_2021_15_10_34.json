{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-wm-adf-training-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoopingPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Table List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Exec stpname ',pipeline().TriggerTime)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlconnection",
								"type": "DatasetReference",
								"parameters": {
									"Environment": {
										"value": "@concat(pipeline().globalParameters.EnvironmentGP,'-sqlserverconnectionstring')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Pipeline",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Table List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Get Table List').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item.dataSource",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Teradata",
												"activities": [
													{
														"name": "Run Parameter Copy Pipeline Teradata",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "ParameterCopyPipeline",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {
																"sourceSQLQuery": {
																	"value": "@item().sqlQuery",
																	"type": "Expression"
																},
																"dataSource": {
																	"value": "@item().dataSource",
																	"type": "Expression"
																},
																"tableName": {
																	"value": "@item().tableName",
																	"type": "Expression"
																}
															}
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Run Parameter Copy Pipeline SQLServer",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "ParameterCopyPipeline",
														"type": "PipelineReference"
													},
													"waitOnCompletion": false,
													"parameters": {
														"sourceSQLQuery": {
															"value": "@item().sqlQuery",
															"type": "Expression"
														},
														"dataSource": {
															"value": "@item().dataSource",
															"type": "Expression"
														},
														"tableName": {
															"value": "@item().tableName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-26T16:26:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-06-01T21:40:00",
						"timeZone": "US Mountain Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								12
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterCopyPipeline Teradata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTableActivity",
						"description": "abcd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "triggerTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									},
									{
										"name": "pipelineID",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.sourceSQLQuery",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sqlconnection",
								"type": "DatasetReference",
								"parameters": {
									"Environment": {
										"value": "@concat(pipeline().globalParameters.EnvironmentGP,'-sqlserverconnectionstring')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS",
								"type": "DatasetReference",
								"parameters": {
									"Environment": {
										"value": "@pipeline().globalParameters.EnvironmentGP",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"pipelineID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"dataSource": {
										"value": "@pipeline().parameters.dataSource",
										"type": "Expression"
									},
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"sourceSQLQuery": {
						"type": "string"
					},
					"dataSource": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-05-26T16:26:31Z"
			},
			"dependsOn": []
		}
	]
}